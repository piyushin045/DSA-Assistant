
import React, { useState } from "react";

export default function App() {
  const [messages, setMessages] = useState([
    { sender: "bot", text: "ðŸ‘‹ Hello! I'm your DSA Assistant. Ask me about data structures, algorithms, or interview prep!" },
  ]);
  const [input, setInput] = useState("");
  const [loading, setLoading] = useState(false);

  const sendMessage = async (e) => {
    e.preventDefault();
    if (!input.trim()) return;

    const userMsg = { sender: "user", text: input.trim() };
    setMessages((prev) => [...prev, userMsg]);
    setInput("");
    setLoading(true);

    // Simulate bot response (you can replace with API call)
    setTimeout(() => {
      const botReply = getBotResponse(userMsg.text);
      setMessages((prev) => [...prev, { sender: "bot", text: botReply }]);
      setLoading(false);
    }, 1000);
  };

  const getBotResponse = (question) => {
    question = question.toLowerCase();
    if (question.includes("stack")) return "A stack is a linear data structure that follows LIFO â€” Last In First Out.";
    if (question.includes("queue")) return "A queue is a linear data structure that follows FIFO â€” First In First Out.";
    if (question.includes("linked list")) return "A linked list is a sequence of nodes where each node points to the next one.";
    if (question.includes("binary search")) return "Binary Search works on sorted data and runs in O(log n) time complexity.";
    if (question.includes("time complexity")) return "Time complexity measures how an algorithm scales with input size, e.g., O(n), O(log n), O(n^2).";
    if (question.includes("hello") || question.includes("hi")) return "Hi there! What DSA topic do you want to learn today?";
    return "I'm still learning ðŸ¤–. Please ask about a DSA concept like stack, queue, or sorting.";
  };

  return (
    <div className="min-h-screen bg-gradient-to-b from-slate-50 to-slate-100 flex flex-col items-center p-4">
      <header className="text-center mt-4">
        <h1 className="text-3xl font-bold text-slate-800">DSA ChatBot ðŸ’¬</h1>
        <p className="text-slate-500 text-sm">Ask anything about Data Structures & Algorithms</p>
      </header>

      <main className="w-full max-w-2xl bg-white shadow-lg rounded-2xl flex flex-col mt-6 h-[70vh] overflow-hidden">
        <div id="chat-window" className="flex-1 overflow-y-auto p-4 space-y-3">
          {messages.map((msg, i) => (
            <div
              key={i}
              className={`flex ${msg.sender === "user" ? "justify-end" : "justify-start"}`}
            >
              <div
                className={`max-w-[80%] px-4 py-2 rounded-2xl text-sm shadow-sm ${
                  msg.sender === "user"
                    ? "bg-slate-900 text-white rounded-br-none"
                    : "bg-slate-200 text-slate-900 rounded-bl-none"
                }`}
              >
                {msg.text}
              </div>
            </div>
          ))}

          {loading && (
            <div className="flex justify-start">
              <div className="bg-slate-200 text-slate-900 px-4 py-2 rounded-2xl text-sm animate-pulse">
                Typing...
              </div>
            </div>
          )}
        </div>

        <form
          onSubmit={sendMessage}
          className="border-t border-slate-200 p-3 flex items-center gap-2"
        >
          <input
            type="text"
            placeholder="Ask your DSA question..."
            value={input}
            onChange={(e) => setInput(e.target.value)}
            className="flex-1 p-3 border rounded-full outline-none focus:ring-2 focus:ring-slate-300"
          />
          <button
            type="submit"
            className="bg-slate-900 text-white px-4 py-2 rounded-full hover:bg-slate-800"
          >
            Send
          </button>
        </form>
      </main>

      <footer className="mt-4 text-xs text-slate-500">
        Â© {new Date().getFullYear()} DSA Chatbot â€” Made for learners.
      </footer>
    </div>
  );
}
